{
  "openapi": "3.1.0",
  "info": {
    "title": "DataForSEO Content Analysis API",
    "description": "Access to DataForSEO Content Analysis tools for SEO research and analysis",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "https://api.dataforseo.com"
    }
  ],
  "paths": {
    "/v3/content_analysis/search/live.ai": {
      "post": {
        "description": "This endpoint will provide you with detailed citation data available for the target keyword",
        "operationId": "content_analysis_search",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "keyword": {
                    "type": "string",
                    "description": "target keyword\n        Note: to match an exact phrase instead of a stand-alone keyword, use double quotes and backslashes;"
                  },
                  "keyword_fields": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "main_title": {
                        "type": "string"
                      },
                      "previous_title": {
                        "type": "string"
                      },
                      "snippet": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "description": "target keyword fields and target keywords\n        use this parameter to filter the dataset by keywords that certain fields should contain;\n        you can indicate several fields;\n        Note: to match an exact phrase instead of a stand-alone keyword, use double quotes and backslashes;\n        example:\n        {\n          \"snippet\": \"\\\"logitech mouse\\\"\",\n          \"main_title\": \"sale\"\n        }"
                  },
                  "page_type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "ecommerce",
                        "news",
                        "blogs",
                        "message-boards",
                        "organization"
                      ]
                    },
                    "description": "target page types"
                  },
                  "search_mode": {
                    "type": "string",
                    "enum": [
                      "as_is",
                      "one_per_domain"
                    ],
                    "description": "results grouping type"
                  },
                  "limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 10,
                    "description": "maximum number of results to return"
                  },
                  "offset": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "offset in the results array of returned keywords"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": [
                              "string",
                              "number",
                              "boolean"
                            ]
                          },
                          "minItems": 3,
                          "maxItems": 3
                        },
                        {
                          "type": "string",
                          "enum": [
                            "and",
                            "or"
                          ]
                        }
                      ]
                    },
                    "maxItems": 8,
                    "description": "array of results filtering parameters\noptional field\nyou can add several filters at once (8 filters maximum)\nyou should set a logical operator and, or between the conditions\nthe following operators are supported:\nregex, not_regex, <, <=, >, >=, =, <>, in, not_in, like,not_like, match, not_match\nyou can use the % operator with like and not_like to match any string of zero or more characters\nexample:\n[\"country\",\"=\", \"US\"]\n[[\"domain_rank\",\">\",800],\"and\",[\"content_info.connotation_types.negative\",\">\",0.9]]\n\n[[\"domain_rank\",\">\",800],\n\"and\",\n[[\"page_types\",\"has\",\"ecommerce\"],\n\"or\",\n[\"content_info.text_category\",\"has\",10994]]"
                  },
                  "order_by": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "results sorting rules\noptional field\nyou can use the same values as in the filters array to sort the results\npossible sorting types:\nasc \u2013 results will be sorted in the ascending order\ndesc \u2013 results will be sorted in the descending order\nyou should use a comma to set up a sorting type\nexample:\n[\"content_info.sentiment_connotations.anger,desc\"]\ndefault rule:\n[\"content_info.sentiment_connotations.anger,desc\"]\nnote that you can set no more than three sorting rules in a single request\nyou should use a comma to separate several sorting rules\nexample:\n[\"content_info.sentiment_connotations.anger,desc\",\"keyword_data.keyword_info.cpc,desc\"]"
                  }
                },
                "required": [
                  "keyword"
                ]
              }
            }
          }
        }
      }
    },
    "/v3/content_analysis/summary/live.ai": {
      "post": {
        "description": "This endpoint will provide you with an overview of citation data available for the target keyword",
        "operationId": "content_analysis_summary",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "keyword": {
                    "type": "string",
                    "description": "target keyword\n        Note: to match an exact phrase instead of a stand-alone keyword, use double quotes and backslashes;"
                  },
                  "keyword_fields": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "main_title": {
                        "type": "string"
                      },
                      "previous_title": {
                        "type": "string"
                      },
                      "snippet": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "description": "target keyword fields and target keywords\n        use this parameter to filter the dataset by keywords that certain fields should contain;\n        you can indicate several fields;\n        Note: to match an exact phrase instead of a stand-alone keyword, use double quotes and backslashes;\n        example:\n        {\n          \"snippet\": \"\\\"logitech mouse\\\"\",\n          \"main_title\": \"sale\"\n        }"
                  },
                  "page_type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "ecommerce",
                        "news",
                        "blogs",
                        "message-boards",
                        "organization"
                      ]
                    },
                    "description": "target page types"
                  },
                  "initial_dataset_filters": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": [
                              "string",
                              "number",
                              "boolean"
                            ]
                          },
                          "minItems": 3,
                          "maxItems": 3
                        },
                        {
                          "type": "string",
                          "enum": [
                            "and",
                            "or"
                          ]
                        }
                      ]
                    },
                    "maxItems": 8,
                    "description": "initial dataset filtering parameters\n        initial filtering parameters that apply to fields in the Search endpoint;\n        you can add several filters at once (8 filters maximum);\n        you should set a logical operator and, or between the conditions;\n        the following operators are supported:\n        regex, not_regex, <, <=, >, >=, =, <>, in, not_in, like,not_like, has, has_not, match, not_match\n        you can use the % operator with like and not_like to match any string of zero or more characters;\n        example:\n        [\"domain\",\"<>\", \"logitech.com\"]\n        [[\"domain\",\"<>\",\"logitech.com\"],\"and\",[\"content_info.connotation_types.negative\",\">\",1000]]\n\n        [[\"domain\",\"<>\",\"logitech.com\"]],\n        \"and\",\n        [[\"content_info.connotation_types.negative\",\">\",1000],\n        \"or\",\n        [\"content_info.text_category\",\"has\",10994]]"
                  },
                  "positive_connotation_threshold": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "positive connotation threshold\n          specified as the probability index threshold for positive sentiment related to the citation content\n          if you specify this field, connotation_types object in the response will only contain data on citations with positive sentiment probability more than or equal to the specified value",
                    "default": 0.4
                  },
                  "sentiments_connotation_threshold": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "sentiment connotation threshold\nspecified as the probability index threshold for sentiment connotations related to the citation content\nif you specify this field, sentiment_connotations object in the response will only contain data on citations where the\nprobability per each sentiment is more than or equal to the specified value",
                    "default": 0.4
                  },
                  "internal_list_limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 20,
                    "default": 1,
                    "description": "maximum number of elements within internal arrays\n          you can use this field to limit the number of elements within the following arrays"
                  }
                },
                "required": [
                  "keyword"
                ]
              }
            }
          }
        }
      }
    },
    "/v3/content_analysis/phrase_trends/live.ai": {
      "post": {
        "description": "This endpoint will provide you with data on all citations of the target keyword for the indicated date range",
        "operationId": "content_analysis_phrase_trends",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "keyword": {
                    "type": "string",
                    "description": "target keyword\n        Note: to match an exact phrase instead of a stand-alone keyword, use double quotes and backslashes;"
                  },
                  "keyword_fields": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "main_title": {
                        "type": "string"
                      },
                      "previous_title": {
                        "type": "string"
                      },
                      "snippet": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "description": "target keyword fields and target keywords\n        use this parameter to filter the dataset by keywords that certain fields should contain;\n        you can indicate several fields;\n        Note: to match an exact phrase instead of a stand-alone keyword, use double quotes and backslashes;\n        example:\n        {\n          \"snippet\": \"\\\"logitech mouse\\\"\",\n          \"main_title\": \"sale\"\n        }"
                  },
                  "page_type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "ecommerce",
                        "news",
                        "blogs",
                        "message-boards",
                        "organization"
                      ]
                    },
                    "description": "target page types"
                  },
                  "initial_dataset_filters": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": [
                              "string",
                              "number",
                              "boolean"
                            ]
                          },
                          "minItems": 3,
                          "maxItems": 3
                        },
                        {
                          "type": "string",
                          "enum": [
                            "and",
                            "or"
                          ]
                        }
                      ]
                    },
                    "maxItems": 8,
                    "description": "initial dataset filtering parameters\n        initial filtering parameters that apply to fields in the Search endpoint;\n        you can add several filters at once (8 filters maximum);\n        you should set a logical operator and, or between the conditions;\n        the following operators are supported:\n        regex, not_regex, <, <=, >, >=, =, <>, in, not_in, like,not_like, has, has_not, match, not_match\n        you can use the % operator with like and not_like to match any string of zero or more characters;\n        example:\n        [\"domain\",\"<>\", \"logitech.com\"]\n        [[\"domain\",\"<>\",\"logitech.com\"],\"and\",[\"content_info.connotation_types.negative\",\">\",1000]]\n\n        [[\"domain\",\"<>\",\"logitech.com\"]],\n        \"and\",\n        [[\"content_info.connotation_types.negative\",\">\",1000],\n        \"or\",\n        [\"content_info.text_category\",\"has\",10994]]"
                  },
                  "date_from": {
                    "type": "string",
                    "description": "starting date of the time range\n        date format: \"yyyy-mm-dd\""
                  },
                  "date_to": {
                    "type": "string",
                    "description": "ending date of the time range\n        date format: \"yyyy-mm-dd\""
                  },
                  "date_group": {
                    "type": "string",
                    "enum": [
                      "day",
                      "week",
                      "month"
                    ],
                    "default": "month",
                    "description": "date grouping type"
                  },
                  "internal_list_limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 20,
                    "default": 1,
                    "description": "maximum number of elements within internal arrays\n          you can use this field to limit the number of elements within the following arrays"
                  }
                },
                "required": [
                  "keyword",
                  "date_from"
                ]
              }
            }
          }
        }
      }
    }
  }
}